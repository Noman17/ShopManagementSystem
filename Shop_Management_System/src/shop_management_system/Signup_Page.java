/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop_management_system;

import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class Signup_Page extends javax.swing.JFrame {

    /**
     * Creates new form Signup_Page
     */
    public Signup_Page() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        // create a button group for the radiobuttons
        ButtonGroup bg = new ButtonGroup();
        bg.add(jRadioButtonMale);
        bg.add(jRadioButtonFemale);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelMin = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        jLabelUsername = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        jLabelPassword = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        jLabelRetype_password = new javax.swing.JLabel();
        Retype_password = new javax.swing.JPasswordField();
        jLabelAddress = new javax.swing.JLabel();
        Address = new javax.swing.JTextField();
        jLabelPhoneNo = new javax.swing.JLabel();
        PhoneNo = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabelGender = new javax.swing.JLabel();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jLabelBirthDate = new javax.swing.JLabel();
        BirthDate = new com.toedter.calendar.JDateChooser();
        jLabelCity = new javax.swing.JLabel();
        City = new javax.swing.JTextField();
        jButtonSignup = new javax.swing.JButton();
        jLabelLogin = new javax.swing.JLabel();
        jLabelCopyrightText = new javax.swing.JLabel();
        jLabelCountry = new javax.swing.JLabel();
        Country = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(702, 681));
        jPanel1.setLayout(null);

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setText(" -");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelMinMouseExited(evt);
            }
        });
        jPanel1.add(jLabelMin);
        jLabelMin.setBounds(630, 10, 20, 22);

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelClose.setText(" X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseExited(evt);
            }
        });
        jPanel1.add(jLabelClose);
        jLabelClose.setBounds(660, 10, 20, 22);

        jLabelUsername.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelUsername.setForeground(new java.awt.Color(0, 102, 204));
        jLabelUsername.setText("Staff Name:");
        jPanel1.add(jLabelUsername);
        jLabelUsername.setBounds(30, 260, 120, 30);

        Username.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Username.setForeground(new java.awt.Color(153, 153, 153));
        Username.setText("username");
        Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UsernameFocusLost(evt);
            }
        });
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });
        jPanel1.add(Username);
        Username.setBounds(180, 260, 180, 30);

        jLabelPassword.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelPassword.setForeground(new java.awt.Color(0, 102, 204));
        jLabelPassword.setText("Password:");
        jPanel1.add(jLabelPassword);
        jLabelPassword.setBounds(30, 300, 120, 28);

        Password.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Password.setForeground(new java.awt.Color(153, 153, 153));
        Password.setText("password");
        Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PasswordFocusLost(evt);
            }
        });
        jPanel1.add(Password);
        Password.setBounds(180, 300, 180, 30);

        jLabelRetype_password.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelRetype_password.setForeground(new java.awt.Color(0, 102, 204));
        jLabelRetype_password.setText("Retype Pass:");
        jPanel1.add(jLabelRetype_password);
        jLabelRetype_password.setBounds(30, 340, 130, 30);

        Retype_password.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Retype_password.setForeground(new java.awt.Color(153, 153, 153));
        Retype_password.setText("password");
        Retype_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Retype_passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Retype_passwordFocusLost(evt);
            }
        });
        jPanel1.add(Retype_password);
        Retype_password.setBounds(180, 340, 180, 30);

        jLabelAddress.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelAddress.setForeground(new java.awt.Color(0, 102, 204));
        jLabelAddress.setText("Address:");
        jPanel1.add(jLabelAddress);
        jLabelAddress.setBounds(30, 380, 120, 30);

        Address.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Address.setForeground(new java.awt.Color(153, 153, 153));
        Address.setText("xx/x road");
        Address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AddressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AddressFocusLost(evt);
            }
        });
        Address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressActionPerformed(evt);
            }
        });
        jPanel1.add(Address);
        Address.setBounds(180, 380, 180, 30);

        jLabelPhoneNo.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelPhoneNo.setForeground(new java.awt.Color(0, 102, 204));
        jLabelPhoneNo.setText("Phone No:");
        jPanel1.add(jLabelPhoneNo);
        jLabelPhoneNo.setBounds(380, 260, 110, 30);

        PhoneNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PhoneNo.setForeground(new java.awt.Color(153, 153, 153));
        PhoneNo.setText("01X-XXX-XXX-XX");
        PhoneNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PhoneNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PhoneNoFocusLost(evt);
            }
        });
        PhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneNoActionPerformed(evt);
            }
        });
        jPanel1.add(PhoneNo);
        PhoneNo.setBounds(500, 260, 170, 30);

        jLabelEmail.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelEmail.setForeground(new java.awt.Color(0, 102, 204));
        jLabelEmail.setText("Email:");
        jPanel1.add(jLabelEmail);
        jLabelEmail.setBounds(380, 300, 70, 30);

        Email.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Email.setForeground(new java.awt.Color(153, 153, 153));
        Email.setText("abcd@gmail.com");
        Email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailFocusLost(evt);
            }
        });
        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });
        jPanel1.add(Email);
        Email.setBounds(500, 300, 170, 30);

        jLabelGender.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelGender.setForeground(new java.awt.Color(0, 102, 204));
        jLabelGender.setText("Gender:");
        jPanel1.add(jLabelGender);
        jLabelGender.setBounds(380, 340, 90, 30);

        jRadioButtonMale.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonMale.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jRadioButtonMale.setSelected(true);
        jRadioButtonMale.setText("Male");
        jRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMaleActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonMale);
        jRadioButtonMale.setBounds(510, 340, 70, 30);

        jRadioButtonFemale.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonFemale.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jRadioButtonFemale.setText("Female");
        jPanel1.add(jRadioButtonFemale);
        jRadioButtonFemale.setBounds(590, 340, 80, 30);

        jLabelBirthDate.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelBirthDate.setForeground(new java.awt.Color(0, 102, 204));
        jLabelBirthDate.setText("Birth Date:");
        jPanel1.add(jLabelBirthDate);
        jLabelBirthDate.setBounds(380, 380, 120, 30);

        BirthDate.setForeground(new java.awt.Color(153, 153, 153));
        BirthDate.setToolTipText("");
        BirthDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(BirthDate);
        BirthDate.setBounds(500, 380, 170, 30);

        jLabelCity.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelCity.setForeground(new java.awt.Color(0, 102, 204));
        jLabelCity.setText("City:");
        jPanel1.add(jLabelCity);
        jLabelCity.setBounds(380, 420, 120, 30);

        City.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        City.setForeground(new java.awt.Color(153, 153, 153));
        City.setText("X");
        City.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CityFocusLost(evt);
            }
        });
        jPanel1.add(City);
        City.setBounds(500, 420, 170, 28);

        jButtonSignup.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSignup.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButtonSignup.setForeground(new java.awt.Color(0, 153, 0));
        jButtonSignup.setText("Sign Up");
        jButtonSignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonSignupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonSignupMouseExited(evt);
            }
        });
        jButtonSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignupActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSignup);
        jButtonSignup.setBounds(170, 510, 350, 50);

        jLabelLogin.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelLogin.setText("Click here to login");
        jLabelLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLoginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelLoginMouseExited(evt);
            }
        });
        jPanel1.add(jLabelLogin);
        jLabelLogin.setBounds(290, 560, 130, 30);

        jLabelCopyrightText.setBackground(new java.awt.Color(255, 255, 255));
        jLabelCopyrightText.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelCopyrightText.setForeground(new java.awt.Color(153, 153, 153));
        jLabelCopyrightText.setText("Copyright 2019 - Digital Office Management System | All Rights Reserved TO US");
        jPanel1.add(jLabelCopyrightText);
        jLabelCopyrightText.setBounds(90, 630, 530, 30);

        jLabelCountry.setFont(new java.awt.Font("Tahoma", 0, 23)); // NOI18N
        jLabelCountry.setForeground(new java.awt.Color(0, 102, 204));
        jLabelCountry.setText("Country:");
        jPanel1.add(jLabelCountry);
        jLabelCountry.setBounds(30, 420, 90, 28);

        Country.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Country.setForeground(new java.awt.Color(153, 153, 153));
        Country.setText("XYZ");
        Country.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CountryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CountryFocusLost(evt);
            }
        });
        jPanel1.add(Country);
        Country.setBounds(180, 420, 180, 28);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/signup.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 702, 680);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jLabelMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseEntered
        jLabelMin.setForeground(Color.gray);
    }//GEN-LAST:event_jLabelMinMouseEntered

    private void jLabelMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseExited
        jLabelMin.setForeground(Color.black);
    }//GEN-LAST:event_jLabelMinMouseExited

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jLabelCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseEntered
        jLabelClose.setForeground(Color.red);
    }//GEN-LAST:event_jLabelCloseMouseEntered

    private void jLabelCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseExited
        jLabelClose.setForeground(Color.black);
    }//GEN-LAST:event_jLabelCloseMouseExited

    private void AddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddressFocusGained
        // clear the textfield on focus if the text is "xx/x road"
        if(Address.getText().trim().toLowerCase().equals("xx/x road"))
        {
            Address.setText("");
            Address.setForeground(Color.black);
        }
    }//GEN-LAST:event_AddressFocusGained

    private void AddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddressFocusLost
        // if the text field is equal to username or empty
        // we will set the "XX/X Road" text in the field
        // on focus lost event
        if(Address.getText().trim().equals("") || Address.getText().trim().toLowerCase().equals("xx/x road"))
        {
            Address.setText("xx/x road");
            Address.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_AddressFocusLost

    private void AddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressActionPerformed

    private void PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFocusGained
        // clear the password field on focus if the text is "password"
        // get the password text
        String pass = String.valueOf(Password.getPassword());
        if(pass.trim().toLowerCase().equals("password"))
        {
            Password.setText("");
            Password.setForeground(Color.black);
        }
    }//GEN-LAST:event_PasswordFocusGained

    private void PasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFocusLost
        // if the password field is equal to password or empty
        // we will set the "password" text in the field
        // on focus lost event
        // get the password text
        String pass = String.valueOf(Password.getPassword());
        if(pass.trim().equals("") || pass.trim().toLowerCase().equals("password"))
        {
            Password.setText("password");
            Password.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_PasswordFocusLost

    private void Retype_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Retype_passwordFocusGained
        // clear the password field on focus if the text is "password"
        // get the password text
        String pass = String.valueOf(Retype_password.getPassword());
        if(pass.trim().toLowerCase().equals("password"))
        {
            Retype_password.setText("");
            Retype_password.setForeground(Color.black);
        }
    }//GEN-LAST:event_Retype_passwordFocusGained

    private void Retype_passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Retype_passwordFocusLost
        // if the password field is equal to password or empty
        // we will set the "password" text in the field
        // on focus lost event
        // get the password text
        String pass = String.valueOf(Retype_password.getPassword());
        if(pass.trim().equals("") || pass.trim().toLowerCase().equals("password"))
        {
            Retype_password.setText("password");
            Retype_password.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_Retype_passwordFocusLost

    private void jRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMaleActionPerformed

    private void PhoneNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFocusGained
        // clear the textfield on focus if the text is "01X-XXX-XXX-XX"
        if(PhoneNo.getText().trim().toUpperCase().equals("01X-XXX-XXX-XX"))
        {
            PhoneNo.setText("");
            PhoneNo.setForeground(Color.black);
        }
    }//GEN-LAST:event_PhoneNoFocusGained

    private void PhoneNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PhoneNoFocusLost
        // if the text field is equal to 01X-XXX-XXX-XX or empty
        // we will set the "01X-XXX-XXX-XX" text in the field
        // on focus lost event
        if(PhoneNo.getText().trim().equals("") || PhoneNo.getText().trim().toUpperCase().equals("01X-XXX-XXX-XX"))
        {
            PhoneNo.setText("01X-XXX-XXX-XX");
            PhoneNo.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_PhoneNoFocusLost

    private void PhoneNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNoActionPerformed

    private void EmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFocusGained
        // clear the textfield on focus if the text is "abcd@gmail.com"
        if(Email.getText().trim().toLowerCase().equals("abcd@gmail.com"))
        {
            Email.setText("");
            Email.setForeground(Color.black);
        }
    }//GEN-LAST:event_EmailFocusGained

    private void EmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailFocusLost
        // if the text field is equal to 1234@gmail.com or empty
        // we will set the "1234@gmail.com" text in the field
        // on focus lost event
        if(Email.getText().trim().equals("") || Email.getText().trim().toLowerCase().equals("1234@gmail.com"))
        {
            Email.setText("1234@gmail.com");
            Email.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_EmailFocusLost

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailActionPerformed

    private void jLabelLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLoginMouseClicked
        StaffLogin_Page lgf = new StaffLogin_Page();
        lgf.setVisible(true);
        lgf.pack();
        lgf.setLocationRelativeTo(null);
        lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLabelLoginMouseClicked

    private void jLabelLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLoginMouseEntered
        jLabelLogin.setForeground(Color.gray);
    }//GEN-LAST:event_jLabelLoginMouseEntered

    private void jLabelLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLoginMouseExited
        jLabelLogin.setForeground(Color.black);
    }//GEN-LAST:event_jLabelLoginMouseExited

    private void jButtonSignupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSignupMouseEntered
        // set jbutton background
        jButtonSignup.setBackground(new Color(149,165,166));
    }//GEN-LAST:event_jButtonSignupMouseEntered

    private void jButtonSignupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSignupMouseExited
        // set jbutton background
        jButtonSignup.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_jButtonSignupMouseExited

    private void jButtonSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignupActionPerformed
        String username = Username.getText();
        String pass1 = String.valueOf(Password.getPassword());
        String pass2 = String.valueOf(Retype_password.getPassword());
        String gender = "Male";
        String bdate = null;
        String phone = PhoneNo.getText();
        String email = Email.getText();
        String address = Address.getText();
        String city = City.getText();
        String country = Country.getText();
        //check if BirthDate feild is empty
        if(BirthDate.getDate() != null)
        {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            bdate = sdf.format(BirthDate.getDate());
        }
        if(jRadioButtonFemale.isSelected()){
            gender = "Female";
        }
        // check if the data are empty
        if(verifyFields())
        {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection;
                try {
                    connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ShopManagementSystem;selectMethod=cursor", "sa", "123456");
                    String registerUserQuery = "INSERT INTO Seller (SellerName, Email, PhoneNo, Gender, BirthDate, Address, City, Country, Password) VALUES (?,?,?,?,?,?,?,?,?)";
                    PreparedStatement ps = connection.prepareStatement(registerUserQuery);
                    ps.setString(1, username);
                    if(!checkEmail(email))
                    {
                        ps.setString(2, email);
                    }
                    ps.setString(3, phone);
                    ps.setString(4, gender);
                    ps.setString(5, bdate);
                    if(bdate != null)
                    {
                        ps.setString(5, bdate);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Enter your Birthdate","Empty Birthdate",2);
                    }
                    ps.setString(6, address);
                    ps.setString(7, city);
                    ps.setString(8, country);
                    ps.setString(9, pass1);
                    int i = ps.executeUpdate();
                    if (i>0) {
                    JOptionPane.showMessageDialog(null, "Your Account Has Been Created");
                    Username.setText("");
                    Address.setText("");
                    Password.setText("");
                    Retype_password.setText("");
                    PhoneNo.setText("");
                    //JDateChooser dateChooser = new JDateChooser();
                    BirthDate.setCalendar(null);
                    Email.setText("");
                    City.setText("");
                    Country.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error: Check Your Information");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonSignupActionPerformed

    private void UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFocusGained
        // clear the textfield on focus if the text is "username"
        if(Username.getText().trim().toLowerCase().equals("username"))
        {
            Username.setText("");
            Username.setForeground(Color.black);
        }
    }//GEN-LAST:event_UsernameFocusGained

    private void UsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UsernameFocusLost
        // if the text field is equal to username or empty
        // we will set the "1234@gmail.com" text in the field
        // on focus lost event
        if(Username.getText().trim().equals("") || Username.getText().trim().toLowerCase().equals("username"))
        {
            Username.setText("username");
            Username.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_UsernameFocusLost

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameActionPerformed

    private void CountryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CountryFocusGained
        // clear the textfield on focus if the text is "XYZ"
        if(Country.getText().trim().toUpperCase().equals("XYZ"))
        {
            Country.setText("");
            Country.setForeground(Color.black);
        }
    }//GEN-LAST:event_CountryFocusGained

    private void CountryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CountryFocusLost
        // if the text field is equal to Bangladesh or empty
        // we will set the "Bangaldesh" text in the field
        // on focus lost event
        if(Country.getText().trim().equals("") || Country.getText().trim().toUpperCase().equals("XYZ"))
        {
            Country.setText("XYZ");
            Country.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_CountryFocusLost

    private void CityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityFocusGained
        // clear the textfield on focus if the text is "X"
        if(City.getText().trim().toUpperCase().equals("X"))
        {
            City.setText("");
            City.setForeground(Color.black);
        }
    }//GEN-LAST:event_CityFocusGained

    private void CityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityFocusLost
        // if the text field is equal to X or empty
        // we will set the "X" text in the field
        // on focus lost event
        if(City.getText().trim().equals("") || City.getText().trim().toUpperCase().equals("X"))
        {
            City.setText("X");
            City.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_CityFocusLost
    
    // create a function to verify the empty fields  
    public boolean verifyFields()
    {
        String uname = Username.getText();
        String pass1 = String.valueOf(Password.getPassword());
        String pass2 = String.valueOf(Retype_password.getPassword());
        String phone = PhoneNo.getText();
        String email = Email.getText();
        String check = "@gmail.com";
        String address = Address.getText();
        String city = City.getText();
        String country = Country.getText();
        // check if password is empty fields
        if(pass1.trim().equals("") || pass1.trim().equals("password") || pass2.trim().equals("") || pass2.trim().equals("password"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Password","Empty Fields",2);
            return false;
        }
        // check if username is empty fields
        else if(uname.trim().equals("") || uname.trim().equals("username"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Username","Empty Fields",2);
            return false;
        }
        // check if phone no is empty fields
        else if(phone.trim().equals("") || phone.trim().equals("01X-XXX-XXX-XX"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Phone No","Empty Fields",2);
            return false;
        }
        // check if email is empty fields
        else if(email.trim().equals("") || email.trim().equals("abcd@gmail.com"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Email","Empty Fields",2);
            return false;
        }
        // check if the two password are equals or not
        else if(!pass1.equals(pass2))
        {
            JOptionPane.showMessageDialog(null, "Password Doesn't Match","Confirm Password",2); 
            Password.setText("");
            Retype_password.setText("");
            return false;
        }
        else if(!email.contains(check))
        {
            JOptionPane.showMessageDialog(null, "Email invalid format","Confirm Email",2);
            return false;
        }
        // check if address is empty fields
        else if(address.trim().equals("") || address.trim().equals("XX/X Road"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Address","Empty Fields",2);
            return false;
        }
        // check if city is empty fields
        else if(city.trim().equals("") || city.trim().equals("X"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your City","Empty Fields",2);
            return false;
        }
        // check if country is empty fields
        else if(country.trim().equals("") || country.trim().equals("Bangladesh"))  
        {
            JOptionPane.showMessageDialog(null, "Enter your Country","Empty Fields",2);
            return false;
        }
        // if everything is ok
        else{
            return true;
        }
    }
    
    // create a function to check if the entered id is already exists in the database
    public boolean checkId(String id){
        boolean id_exist = false;        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagementSystem;selectMethod=cursor", "sa", "123456");
            String query = "SELECT * FROM Seller WHERE SellerID = ?";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
        
            if(rs.next())
            {
                id_exist = true;
                JOptionPane.showMessageDialog(null, "This Id is Already Taken, Choose Another One", "ID Failed", 2);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {       
            Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id_exist;
    }
    // create a function to check if the entered email is already exists in the database
    public boolean checkEmail(String email){
        boolean email_exist = false;     
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagementSystem;selectMethod=cursor", "sa", "123456");
            String query = "SELECT * FROM Seller WHERE Email = ?";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, email);
            ResultSet rs = pst.executeQuery();
        
            if(rs.next())
            {
                email_exist = true;
                JOptionPane.showMessageDialog(null, "This Email is Already Taken, Choose Another One", "Email Failed", 2);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {       
            Logger.getLogger(Signup_Page.class.getName()).log(Level.SEVERE, null, ex);
        }
        return email_exist;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private com.toedter.calendar.JDateChooser BirthDate;
    private javax.swing.JTextField City;
    private javax.swing.JTextField Country;
    private javax.swing.JTextField Email;
    private javax.swing.JPasswordField Password;
    private javax.swing.JTextField PhoneNo;
    private javax.swing.JPasswordField Retype_password;
    private javax.swing.JTextField Username;
    private javax.swing.JButton jButtonSignup;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelBirthDate;
    private javax.swing.JLabel jLabelCity;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelCopyrightText;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelPhoneNo;
    private javax.swing.JLabel jLabelRetype_password;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    // End of variables declaration//GEN-END:variables
}
